// Canvas Integration Styles - Converted from Canvas-Project
// Aangepast voor gedichtgevel.nl project layout met NavBar

/* Import project variables */
@use "../../../styles/variables" as *;
@use "../../../styles/mixins" as *;
@use "sass:color";

/* Canvas theme variables */
$canvas-bg-dark:      #1d2230;
$canvas-bg-secondary: #2a3441; // Added: Secondary background for inputs
$canvas-controls-bg:  #2a3441;
$canvas-text-primary: #ffffff;
$canvas-accent:       #3b82f6;
$canvas-border:       #4a5568;

/* Basisstijl voor alle control-knoppen */
.buttonGroup button,
.resetButton {
  padding:          0.5rem 1rem;
  cursor:           pointer;
  font-family:      $font-family-button;
  font-size:        $font-size-xs;
  font-weight:      $font-weight-semibold;
  color:            #a0aec0;
  border:           none;
  background-color: transparent;
  }

/* Stijl voor de ronde icon reset knoppen */
.iconResetButton {
  font-size:       1rem;
  display:         flex;
  align-items:     center;
  justify-content: center;
  width:           28px;
  height:          28px;
  padding:         0;
  cursor:          pointer;
  transition:      all 0.2s ease;
  color:           #e2e8f0;
  border:          1px solid $canvas-border;
  border-radius:   50%;
  background:      rgba(255, 255, 255, 0.1);
  }

.iconResetButton:hover {
  transform:    rotate(90deg);
  border-color: #667eea;
  background:   rgba(255, 255, 255, 0.15);
  }

/* Hover-staat delen */
.buttonGroup button:hover,
.resetButton:hover {
  background-color: $canvas-border;
  }

/* Active-staat delen â€” voeg ook .active als losse class toe (zie hieronder) */
.buttonGroup button.active,
.resetButton.active {
  color:            white;
  background-color: #02690b;
  }

/* Alleen voor groep-knoppen (scheidingslijnen en container rounding) */
.buttonGroup {
  display:       flex;
  overflow:      hidden;
  flex-wrap:     nowrap; /* Prevent wrapping */
  border:        1px solid $canvas-border;
  border-radius: 5px;
  }

.buttonGroup button {
  font-size:   0.8rem; /* Smaller font */
  padding:     0.25rem 0.5rem; /* Smaller padding */
  border-left: 1px solid $canvas-border;
  }

.buttonGroup button:first-child {
  border-left: none;
  }

/* AANGEPAST: Canvas container voor hoofdproject met NavBar */
.canvasContainer {
  display:    flex;
  width:      100vw;
  height:     calc(100vh - 80px); // Account for NavBar height
  background: $canvas-bg-dark;

  @include respond-to("mobile") {
	flex-direction: column;
	height:         calc(100vh - 80px); // Adjust for mobile NavBar
	}
  }

.canvasWrapper {
  flex:       1;
  min-width:  0;
  height:     100%;
  background: $canvas-bg-dark;
  }

.panelHeader {
  position:         sticky;
  z-index:          1;
  top:              0;
  display:          flex;
  align-items:      center;
  justify-content:  space-between;
  padding:          8px 16px;
  border-bottom:    1px solid #3d4a5c;
  background-color: $canvas-controls-bg;
  }

.panelHeader h2, .panelHeader h3 {
  font-family: $font-family-section-heading;
  font-size:   $font-size-m;
  font-weight: $font-weight-bold;
  margin:      0;
  color:       $canvas-text-primary;
  }

.closeButton {
  font-size:   20px;
  line-height: 1;
  padding:     1px;
  cursor:      pointer;
  color:       #a0a9b8;
  border:      none;
  background:  none;
  }

.closeButton:hover {
  color: white;
  }

.controlsWrapper {
  display:        flex;
  flex-direction: column;
  padding:        1rem;
  background:     $canvas-controls-bg;
  gap:            12px;
  }

.controlRow {
  display:       flex;
  align-items:   center;
  max-width:     100%;
  margin-bottom: 1rem;
  gap:           0.5rem;
  }

.controlRow label {
  font-family: $font-family-body;
  font-size:   $font-size-xs;
  font-weight: $font-weight-regular;
  flex-shrink: 0;
  min-width:   40px;
  color:       $canvas-text-primary;
  }

.controlRow input[type="range"] {
  flex:      1;
  min-width: 0;
  }

.controlRow input[type="color"] {
  width:         40px;
  height:        30px;
  border:        none;
  border-radius: 4px;
  }

.controlRow span {
  font-family: $font-family-body;
  font-size:   $font-size-xxs;
  font-weight: $font-weight-regular;
  flex-shrink: 0;
  min-width:   40px;
  text-align:  right;
  color:       $canvas-text-primary;
  }

/* Vertical layout for controls with lineControls */
.verticalControlRow {
  align-items:    flex-start;
  flex-direction: column;
  gap:            0.2rem;
  }

.lineControls {
  display:        flex;
  flex-direction: column;
  width:          100%;
  gap:            0.1rem;
  }

.lineControls input[type="range"] {
  width: 100%;
  }

.lineControls span {
  font-family: $font-family-body;
  font-size:   $font-size-xxs;
  font-weight: $font-weight-regular;
  align-self:  flex-end;
  color:       #a0aec0;
  }

/* Vertical layout for wide sliders under the label */
.controlGroup {
  display:        flex;
  flex-direction: column;
  margin-bottom:  1rem;
  gap:            0.4rem;
  }

.controlGroup label {
  font-family: $font-family-body;
  font-size:   $font-size-xs;
  font-weight: $font-weight-regular;
  color:       $canvas-text-primary;
  }

.fullWidthRange {
  width: 100%;
  }

.valueRow {
  font-family:     $font-family-body;
  font-size:       $font-size-xxs;
  font-weight:     $font-weight-regular;
  display:         flex;
  justify-content: space-between;
  color:           $canvas-text-primary;
  }

.selectionInfo {
  margin-bottom: 16px;
  padding:       8px;
  border:        1px solid #ffcc00;
  border-radius: 4px;
  background:    rgba(255, 204, 0, 0.1);
  }

.modeToggle {
  display:       flex;
  margin-bottom: 16px;
  gap:           16px;
  }

.clearButton {
  font-size:     12px;
  padding:       4px 8px;
  cursor:        pointer;
  color:         white;
  border:        none;
  border-radius: 4px;
  background:    #ff6b6b;
  }

/* Vertical layout for color controls when a line is selected */
.controlColumn {
  align-items:    flex-start;
  flex-direction: column;
  gap:            0.5rem !important;
  }

.controlColumn .colorControls {
  display:        flex;
  flex-direction: column;
  width:          100%;
  padding-left:   0.25rem;
  gap:            0.5rem;
  }

.controlColumn .lineControls {
  display:        flex;
  flex-direction: column;
  width:          100%;
  gap:            0.5rem;
  }

.controlColumn .hintText {
  font-size: 0.8rem !important;
  margin:    0.25rem 0;
  color:     #a0aec0 !important;
  }

.controlColumn .resetButton {
  font-size:     0.85rem;
  align-self:    flex-start;
  margin:        0 !important;
  padding:       0.25rem 0.5rem;
  border:        1px solid $canvas-border;
  border-radius: 4px;
  background:    rgba(255, 255, 255, 0.1);
  }

.controlColumn .resetButton:hover {
  background: rgba(255, 255, 255, 0.15);
  }

/* Hierarchical Color System Styling */
.controlSection {
  margin:           0;
  padding:          1rem;
  border:           1px solid $canvas-border;
  border-radius:    6px;
  background-color: rgba(0, 0, 0, 0.2);
  }

.controlSection h3 {
  font-size:   1rem;
  font-weight: 600;
  margin:      0 0 0.75rem 0;
  color:       #e2e8f0;
  }

.syncButton {
  font-size:     0.9rem;
  font-weight:   500;
  padding:       0.6rem 1.2rem;
  cursor:        pointer;
  transition:    all 0.2s ease;
  color:         white;
  border:        none;
  border-radius: 5px;
  background:    linear-gradient(135deg, #4299e1, #3182ce);
  box-shadow:    0 2px 4px rgba(0, 0, 0, 0.2);
  }

.syncButton:hover {
  transform:  translateY(-1px);
  background: linear-gradient(135deg, #3182ce, #2c5aa0);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  }

.syncButton:active {
  transform: translateY(0);
  }

/* Color control label styling */
.labelText {
  display:      inline-block;
  margin-right: 0.5rem;
  }

.colorIndicator {
  font-size: 0.8rem;
  display:   inline-block;
  }

.overrideActive {
  color:  #f6ad55;
  filter: drop-shadow(0 0 2px rgba(246, 173, 85, 0.3));
  }

.globalActive {
  color:  #68d391;
  filter: drop-shadow(0 0 2px rgba(104, 211, 145, 0.3));
  }

/* Color controls container */
.colorControls {
  display:     flex;
  align-items: center;
  gap:         0.5rem;
  }

/* Reset color button styling */
.resetColorButton {
  font-size:       14px;
  font-weight:     bold;
  display:         flex;
  align-items:     center;
  flex-shrink:     0;
  justify-content: center;
  width:           28px;
  height:          28px;
  cursor:          pointer;
  transition:      all 0.2s ease;
  color:           #f87171;
  border:          1px solid rgba(239, 68, 68, 0.3);
  border-radius:   50%;
  background:      rgba(239, 68, 68, 0.1);
  }

.resetColorButton:hover {
  transform:    rotate(-180deg);
  border-color: rgba(239, 68, 68, 0.5);
  background:   rgba(239, 68, 68, 0.2);
  }

.resetColorButton:active {
  transform: rotate(-180deg) scale(0.95);
  }

/* Enhanced tooltips styling */
.controlRow [title]:hover {
  position: relative;
  }

/* Responsive adjustments for color controls */
@include respond-to("mobile") {
  .colorControls {
	align-items:    stretch;
	flex-direction: column;
	gap:            0.3rem;
	}

  .resetColorButton {
	align-self:  flex-start;
	margin-left: 0;
	}
  }

/* Collapsible Section Styles */
.controlSection {
  overflow:         hidden;
  margin-bottom:    .5rem;
  border:           1px solid $canvas-border;
  border-radius:    8px;
  background-color: #2d3748;
  }

.sectionHeader {
  display:          flex;
  align-items:      center;
  justify-content:  space-between;
  width:            100%;
  padding:          0.75rem 1rem;
  cursor:           pointer;
  user-select:      none;
  transition:       background-color 0.2s ease;
  text-align:       left;
  color:            #e2e8f0;
  border:           none;
  background-color: #3d4a5c;
  }

.sectionHeader:hover {
  background-color: $canvas-border;
  }

.sectionHeader h3 {
  font-size:   1rem;
  font-weight: 600;
  margin:      0;
  }

.sectionToggle {
  font-size:  1.2rem;
  transition: transform 0.2s ease;
  color:      #a0aec0;
  }

.sectionToggle.collapsed {
  transform: rotate(-90deg);
  }

.sectionContent {
  padding:          1rem;
  background-color: #272d37;
  }

.sectionContent.collapsed {
  display: none;
  }

/* Subsection styles */
.subsection {
  overflow:         hidden;
  margin:           1rem 0;
  border:           1px solid $canvas-border;
  border-radius:    6px;
  background-color: rgba(45, 55, 72, 0.5);
  }

.subsectionHeader {
  font-size:        0.9rem;
  display:          flex;
  align-items:      center;
  justify-content:  space-between;
  width:            100%;
  padding:          0.5rem 0.75rem;
  cursor:           pointer;
  user-select:      none;
  transition:       background-color 0.2s ease;
  text-align:       left;
  color:            #cbd5e0;
  border:           none;
  background-color: rgba(61, 74, 92, 0.7);
  }

.subsectionHeader:hover {
  background-color: rgba(74, 85, 104, 0.7);
  }

.subsectionContent {
  padding: 0.75rem;
  }

.subsectionContent.collapsed {
  display: none;
  }

/* Styling for choice background button */
.chooseBackgroundButton {
  font-size:     0.95rem;
  font-weight:   600;
  width:         100%;
  margin-bottom: 1rem;
  padding:       0.75rem 1.5rem;
  cursor:        pointer;
  transition:    all 0.3s ease;
  color:         white;
  border:        none;
  border-radius: 8px;
  background:    linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  box-shadow:    0 4px 15px rgba(102, 126, 234, 0.4);
  }

.chooseBackgroundButton:hover {
  transform:  translateY(-2px);
  background: linear-gradient(135deg, #5a67d8 0%, #667eea 100%);
  box-shadow: 0 6px 20px rgba(102, 126, 234, 0.6);
  }

.chooseBackgroundButton:active {
  transform: translateY(0);
  }

/* Button row styling */
.buttonRow {
  display: flex;
  margin:  0.5rem 0;
  gap:     0.5rem;
  }

.buttonRow button {
  font-size:        0.9rem;
  flex:             1;
  padding:          8px 12px;
  cursor:           pointer;
  transition:       all 0.2s ease;
  color:            #e2e8f0;
  border:           none;
  border-radius:    4px;
  background-color: $canvas-border;
  }

.buttonRow button:hover {
  transform:        translateY(-1px);
  background-color: #5a6a7d;
  }

.cityDropdown {
  width:            100%;
  padding:          8px;
  color:            #e2e8f0;
  border:           1px solid $canvas-border;
  border-radius:    4px;
  background-color: #2d3748;
  }

.toggleSearchButton {
  width:            100%;
  padding:          8px;
  cursor:           pointer;
  text-align:       center;
  color:            #e2e8f0;
  border:           none;
  border-radius:    4px;
  background-color: $canvas-border;
  }

/* ========== FLOATING PHOTO GRID STYLES ========== */

.photoGridOverlay {
  position:         fixed;
  z-index:          1000;
  top:              0;
  right:            0;
  bottom:           0;
  left:             0;
  display:          flex;
  align-items:      flex-start; /* CHANGED: Start from top */
  justify-content:  flex-start; /* CHANGED: Start from left */
  padding:          20px; /* Add padding for better positioning */
  transition:       opacity 0.3s ease;
  opacity:          0;
  background-color: transparent; /* CHANGED: Remove dimming, let layout filter handle it */
  }

.photoGridOverlay.fadeIn {
  opacity: 1;
  }

.photoGridOverlay.fadeOut {
  opacity: 0;
  }

.floatingPhotoGrid {
  display:          flex;
  flex-direction:   column;
  width:            600px;
  max-width:        90vw;
  max-height:       80vh;
  padding:          1.5rem;
  transition:       all 0.3s ease;
  transform:        scale(0.9) translateY(20px);
  border:           1px solid $canvas-border;
  border-radius:    12px;
  background-color: rgba(45, 55, 72, 0.95); /* Semi-transparent for glass effect */
  box-shadow:       0 20px 50px rgba(0, 0, 0, 0.8); /* Enhanced shadow for better visibility */
  backdrop-filter:  blur(10px); /* Modern glass effect */
  }

.floatingPhotoGrid.slideIn {
  transform: scale(1) translateY(0);
  }

.floatingPhotoGrid.slideOut {
  transform: scale(0.9) translateY(20px);
  }

.floatingGridHeader {
  display:         flex;
  align-items:     center;
  justify-content: space-between;
  margin-bottom:   1rem;
  padding-bottom:  0.5rem;
  border-bottom:   1px solid $canvas-border;
  }

.floatingGridHeader h3 {
  font-size:   1.1rem;
  font-weight: 600;
  margin:      0;
  color:       #e2e8f0;
  }

.headerButtons {
  display:     flex;
  align-items: center;
  gap:         0.5rem;
  }

.resetPhotoButton {
  font-size:       1.2rem;
  line-height:     1;
  display:         flex;
  align-items:     center;
  justify-content: center;
  width:           28px;
  height:          28px;
  padding:         0.25rem;
  cursor:          pointer;
  transition:      all 0.2s ease;
  color:           #ffc107;
  border:          1px solid rgba(255, 193, 7, 0.3);
  border-radius:   4px;
  background:      rgba(255, 193, 7, 0.1);
  }

.resetPhotoButton:hover {
  transform:    rotate(180deg);
  border-color: rgba(255, 193, 7, 0.5);
  background:   rgba(255, 193, 7, 0.2);
  }

.floatingPhotoGridContent {
  display:               grid;
  overflow-y:            auto;
  flex:                  1;
  max-height:            400px;
  margin-bottom:         1rem;
  padding:               4px;
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
  gap:                   12px;
  /* Voor scrollbar ruimte en voorkomen overflow on hover van foto's */
  }

.floatingPhotoThumbnail {
  position:      relative;
  overflow:      hidden;
  cursor:        pointer;
  transition:    all 0.2s ease;
  border:        2px solid transparent;
  border-radius: 6px;
  aspect-ratio:  16 / 9;
  }

.floatingPhotoThumbnail:hover {
  transform:    scale(1.05);
  border-color: #4299e1;
  }

.floatingPhotoThumbnail img {
  display:    block;
  width:      100%;
  height:     100%;
  object-fit: cover;
  }

.floatingPaginationControls {
  display:         flex;
  justify-content: space-between;
  margin-top:      auto;
  padding-top:     1rem;
  border-top:      1px solid $canvas-border;
  gap:             1rem;
  }

.paginationButton {
  font-weight:      500;
  flex:             1;
  padding:          0.75rem 1rem;
  cursor:           pointer;
  transition:       all 0.2s ease;
  color:            white;
  border:           none;
  border-radius:    6px;
  background-color: #4a5a6d;
  }

.paginationButton:hover:not(:disabled) {
  transform:        translateY(-1px);
  background-color: #5a6a7d;
  }

.paginationButton:disabled {
  cursor:           not-allowed;
  transform:        none;
  opacity:          0.5;
  background-color: #2d3748;
  }

.loadingMessage,
.noResultsMessage {
  font-style: italic;
  text-align: center;
  color:      #a0aec0;
  }

.navbarToggleButton {
  font-size:        18px;
  position:         absolute;
  top:              8px;
  right:            12px; /* Position to right of close button */
  display:          flex;
  align-items:      center;
  justify-content:  center;
  width:            32px;
  height:           32px;
  cursor:           pointer;
  transition:       background-color 0.2s ease;
  animation:        pulseAttention 2s ease-in-out 3; /* Pulse 3 times = ~6 seconds */
  color:            #cfd4db;
  border:           none;
  border-radius:    6px;
  background-color: #3d4a5c;

  // Pulsing hint arrow pointing to button
  &::before {
	font-size:        20px;
	position:         absolute;
	z-index:          200;
	right:            calc(100% + 8px);
	padding:          4px 8px; // Ruimte rond tekst
	content:          "Open nav-menu hier: â†’";
	animation:        slideHint 2s ease-in-out 3;
	white-space:      nowrap;
	opacity:          0;
	color:            #e35712;
	border-radius:    4px; // Afgeronde hoeken
	background-color: rgba(42, 52, 65, 0.95); // Semi-transparante achtergrond
	box-shadow:       0 2px 8px rgba(0, 0, 0, 0.3); // Schaduw voor diepte

	}
  }

.navbarToggleButton:hover {
  animation:        none; /* Stop animation on hover */
  color:            #ffffff;
  background-color: #4a5a6d;

  &::before {
	animation: none;
	opacity:   0;
	}
  }

/* ========== NEW CONTROL BUTTONS ========== */

.freeSearchSection {
  margin-top:  1rem;
  padding-top: 1rem;
  border-top:  1px solid $canvas-border;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  }

.searchOptions {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  padding: 0.5rem 0;
  }

.checkboxLabel {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.9rem;
  color: #e2e8f0;
  cursor: pointer;
  user-select: none;

  input[type="checkbox"] {
	cursor: pointer;
	width: 16px;
	height: 16px;
	}

  span {
	flex: 1;
	}

  &:hover {
	color: white;
	}
  }

.searchInput {
  flex: 1;
  padding: 8px 12px;
  font-size: 0.95rem;
  color: white;
  background-color: $canvas-bg-secondary;
  border: 1px solid $canvas-border;
  border-radius: 4px;
  outline: none;
  transition: border-color 0.2s;

  &::placeholder {
	color: #a0aec0;
	}

  &:focus {
	border-color: $primary-cognac;
	}
  }

.searchButtonLarge {
  padding: 10px 16px;
  font-size: 1rem;
  font-weight: 500;
  color: white;
  background-color: $primary-cognac;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  width: 100%;

  &:hover:not(:disabled) {
	background-color: color.adjust($primary-cognac, $lightness: -10%);
	transform: translateY(-1px);
	}

  &:disabled {
	opacity: 0.5;
	cursor: not-allowed;
	}
  }

.searchInfo {
  font-size: 0.85rem;
  color: #a0aec0;
  margin: 0;
  padding: 0.25rem 0;
  text-align: center;
  font-style: italic;
  }

/* Timer indicator and reset button container */
.resetButtonContainer {
  position:    relative;
  display:     flex;
  align-items: center;
  flex:        1;
  }

.timerIndicator {
  font-size: 16px;
  position:  absolute;
  z-index:   10;
  top:       50%;
  right:     -25px;
  transform: translateY(-50%);
  animation: pulse 1s infinite;
  }

@keyframes pulse {
  0% {
	opacity:   0.6;
	transform: translateY(-50%) scale(1);
	}
  50% {
	opacity:   1;
	transform: translateY(-50%) scale(1.1);
	}
  100% {
	opacity:   0.6;
	transform: translateY(-50%) scale(1);
	}
  }

.labelWrapper {
  display:       block;
  margin-bottom: 8px;
  }

.optimizationButtons {
  display: flex;
  width:   100%;
  gap:     8px;
  }

.optimizationButtons button {
  font-size:        0.9rem;
  flex:             1;
  padding:          8px 12px;
  cursor:           pointer;
  transition:       all 0.2s ease;
  color:            #e2e8f0;
  border:           none;
  border-radius:    4px;
  background-color: $canvas-border;
  }

.optimizationButtons button:hover {
  background-color: #5a6a7d;
  }

.optimizationButtons button.active {
  color:            white;
  background-color: #02690b;
  }

.cameraButtons {
  display:       flex;
  overflow:      hidden;
  align-self:    flex-start; /* Prevent stretching */
  border:        1px solid $canvas-border;
  border-radius: 5px;
  }

.cameraButtons button {
  font-size:        0.9rem;
  padding:          8px 12px;
  cursor:           pointer;
  transition:       all 0.2s ease;
  color:            #e2e8f0;
  border:           none;
  background-color: $canvas-border;
  }

.cameraButtons button:not(:last-child) {
  border-right: 1px solid #2d3748;
  }

.cameraButtons button:hover {
  background-color: #5a6a7d;
  }

.cameraButtons button.active {
  color:            white;
  background-color: #02690b;
  }

/* Optimization section styles */
.optimizationInfo {
  margin-top:       8px;
  padding:          8px;
  border:           1px solid rgba(0, 128, 0, 0.3);
  border-radius:    4px;
  background-color: rgba(0, 128, 0, 0.1);
  }

.optimizationHint {
  margin-top:       8px;
  padding:          8px;
  border:           1px solid rgba(59, 130, 246, 0.3);
  border-radius:    4px;
  background-color: rgba(59, 130, 246, 0.1);
  }

.optimizationInfo .infoText,
.optimizationHint .hintText {
  font-size:   12px;
  line-height: 1.4;
  margin:      0;
  color:       #e2e8f0;
  }

.optimizationButtons {
  display:       flex;
  overflow:      hidden;
  border:        1px solid $canvas-border;
  border-radius: 5px;
  }

.optimizationButtons button {
  padding:          0.5rem 1rem;
  cursor:           pointer;
  color:            #a0aec0;
  border:           none;
  border-left:      1px solid $canvas-border;
  background-color: transparent;
  }

.optimizationButtons button:first-child {
  border-left: none;
  }

.optimizationButtons button:hover {
  background-color: $canvas-border;
  }

.optimizationButtons button.active {
  color:            white;
  background-color: #02690b;
  }

.controlGroup {
  display:         flex;
  align-items:     flex-start;
  justify-content: space-between;
  margin-bottom:   8px;
  }

.labelWrapper {
  flex:         1;
  margin-right: 12px;
  }

.labelWrapper .labelText {
  font-weight:   500;
  display:       block;
  margin-bottom: 2px;
  }

.labelWrapper .hintText {
  font-size:   11px;
  line-height: 1.3;
  display:     block;
  color:       #a0aec0;
  }

/* 3D Transformation Controls */
.transform3DControls {
  margin:           8px 0;
  padding:          12px;
  border:           1px solid rgba(139, 69, 19, 0.3);
  border-radius:    4px;
  background-color: rgba(139, 69, 19, 0.1);
  }

.global3DSettings {
  margin:           8px 0;
  padding:          12px;
  border:           1px solid rgba(75, 0, 130, 0.3);
  border-radius:    4px;
  background-color: rgba(75, 0, 130, 0.1);
  }

.transform3DControls h4,
.global3DSettings h4 {
  font-size: 14px;
  margin:    0 0 8px 0;
  color:     #e2e8f0;
  }

.infoBox {
  margin-bottom:    12px;
  padding:          8px;
  border:           1px solid rgba(59, 130, 246, 0.3);
  border-radius:    4px;
  background-color: rgba(59, 130, 246, 0.1);
  }

.infoBox .infoText {
  font-size:   12px;
  line-height: 1.4;
  margin:      0;
  color:       #cbd5e0;
  }

/* Nieuwe toevoegingen voor hoofdproject integratie */

/* NIEUW: Thumbnail freeze overlay voor Alt+J functionaliteit */
.thumbnailFreeze {
  pointer-events: none;
  background:     rgba(0, 0, 0, 0.1);
  }

/* Mobile responsive aanpassingen */
@include respond-to("tablet") {
  .canvasContainer {
	flex-direction: column;
	height:         calc(100vh - 60px); // Smaller mobile NavBar
	}

  .floatingPhotoGrid {
	width:     90vw;
	max-width: none;
	}
  }

@include respond-to("mobile") {
  .controlsWrapper {
	padding: 0.5rem;
	gap:     8px;
	}

  .controlRow {
	margin-bottom: 0.5rem;
	gap:           0.25rem;
	}

  .floatingPhotoGridContent {
	grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
	gap:                   8px;
	}
  }
