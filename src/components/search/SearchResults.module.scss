/**
 * SearchResults SCSS - Figma Design Implementation
 * Converted to use SCSS variables and structure while preserving all functionality
 */

@use "@styles/variables" as *;
@use "@styles/mixins" as *;
@use "sass:color";

.searchResultsSection {
  display:          flex;
  align-items:      center;
  flex-direction:   column;
  justify-content:  center; // Added for proper vertical centering
  width:            100%;
  padding:          $spacing-s 0;
  background-color: transparent; // Inherit from parent
  gap:              $spacing-s;
  container-type:   inline-size;
  container-name:   search-results;

  // Compacte spacing voor canvas mode
  &.canvasMode {
	padding: $spacing-xs 0;
	gap:     $spacing-s;

	.resultsList {
	  gap: $spacing-m; }

	.resultCard {
	  margin-bottom: $spacing-s; }
	}
  }

// Global Toggle Button Container
.globalToggleContainer {
  @include flex-center;
  box-sizing:    border-box;
  width:         100%;
  margin-bottom: $spacing-s; // Was spacing-sm (Reduced from md to sm)
  padding:       0 $spacing-m; }

.globalToggleButton {
  @include flex-center;
  font-family:      $font-family-nav-item; // Was $font-family-primary
  font-size:        $font-size-s; font-weight: $font-weight-semibold; // Was 600
  padding:          $spacing-s $spacing-l; // Was $spacing-sm $spacing-lg
  cursor:           pointer;
  transition:       all $transition-normal;
  color:            $neutral-off-white; // Was $white-medium
  border:           $border-width-regular solid $neutral-off-white; // Was 2px, $white-medium
  border-radius:    $border-radius-sm;
  background-color: $secondary-carribean-current;
  gap:              $spacing-s;

  &:hover {
	transform:        translateY(-1px);
	background-color: color.adjust($secondary-carribean-current, $lightness: -5%);
	box-shadow:       $shadow-md;
	}

  // State variations
  &[aria-expanded="partial"] {
	border-color:     $accent-golden-highlight; // Was #E6B17A;
	background-color: color.adjust($secondary-carribean-current, $lightness: -5%);
	}

  &[aria-expanded="true"] {
	border-color:     $feedback-success;
	background-color: $feedback-success;
	}
  }

.toggleIcon {
  font-size:   $font-size-s; // Was 16px;
  font-weight: bold;
  width:       $size-icon-container; // Was 18px;
  text-align:  center;
  @include flex-center;
  }

// Results Container based on count
.resultsContainer {
  width: 100%;
  }

.resultsList {
  // Base styling - default flex layout
  display:        flex;
  align-items:    flex-start; // CRITICAL FIX: Prevent bidirectional expansion
  flex-direction: column;
  width:          100%;
  gap:            $spacing-m; // Was spacing-md (Further reduced to 1rem (16px) for tighter layout
  }

// Individual Result Card - Based on Figma design
.resultCard {
  position:         relative; // For absolute positioned children (toast)
  display:          flex;
  overflow:         visible;
  flex-direction:   column;
  width:            100%;
  height:           auto;
  min-height:       fit-content;
  margin-bottom:    $spacing-xs; // Was $spacing-sm; Further reduced to 0.5rem (8px) for tighter layout
  border-radius:    $border-radius-lg;
  background-color: $neutral-cream; // Was $half-dutch-white; // Same as inner content
  }

// Equal heights for preview state in multiple columns
.twoColumns,
.threeColumns,
.threeColumnsCarousel {
  .resultCard {
	display:        flex;
	align-items:    stretch;
	flex-direction: column;
	min-height:     fit-content; // Let content determine height naturally
	}

  .poemContent {
	display:        flex;
	flex:           1;
	flex-direction: column;
	height:         auto;
	min-height:     fit-content; // Let content determine height naturally
	}
  }

.cardHeader {
  position:         relative;
  display:          flex;
  overflow:         hidden;
  flex-direction:   column;
  justify-content:  center;
  height:           $height-min-text-area; // Was 120px;
  padding:          $spacing-xl;
  padding-bottom:   $spacing-l;
  text-align:       center;
  border-bottom:    1px solid rgba($neutral-mid, 0.2); // Was $grey-500
  background-color: $neutral-cream; // Was $half-dutch-white;

  .poemTitle {
	font-family: $font-family-body; // Was $font-family-secondary
	font-size:   $font-size-sm-md; // Was 18px;
	font-weight: $font-weight-regular; // Was 400;
	line-height: $line-height-tight; // Was 1.1;
	flex-shrink: 0;
	max-height:  2.2em;

	// Ellipsis for long titles - max 2 lines
	@include text-clamp(2);
	margin:      0 0 $spacing-xs 0; // Was 8px
	color:       $neutral-soft-black; // Was $smoky-black; // Dark color for better contrast
	}

  .poemAuthor {
	font-family: $font-family-body; // Was $font-family-secondary
	font-size:   $font-size-xxs; // Was 14px;
	font-weight: $font-weight-regular; // Was 400;
	line-height: $line-height-snug; // Was 1.2;
	flex-shrink: 0;
	max-height:  2.4em;

	// Ellipsis for long author names
	@include text-clamp(2);
	margin:      0;
	color:       $neutral-mid; // Was $grey-500; // Dark grey for better contrast
	}
  }

.poemContent {
  position:         relative;
  display:          flex;
  overflow:         visible; // CRITICAL: Allow content to expand beyond boundaries
  flex:             1; // CRITICAL: Fill available space in card
  flex-direction:   column;
  height:           auto; // Let content determine full height
  min-height:       fit-content; // Let content determine minimum height
  padding:          $spacing-xl;
  border-radius:    0 0 $border-radius-lg $border-radius-lg;
  background-color: $neutral-cream; // Was $half-dutch-white;
  // Remove transitions that can cause jank during animations
  }

.poemText {
  font-family:   $font-family-body; // Was $font-family-secondary
  font-size:     $font-size-s; // Was 16px;
  font-weight:   $font-weight-regular; // Was 400;
  line-height:   $line-height-relaxed; // Was 1.6;
  flex:          1;
  min-height:    $height-min-text-area; // Was 120px; // Ensure minimum text area height
  margin:        0;
  white-space:   pre-line;
  word-wrap:     break-word;
  color:         $neutral-soft-black; // Was $smoky-black; // Dark color for better readability
  overflow-wrap: break-word;

  &.collapsed {
	display:            -webkit-box;
	overflow:           hidden;
	text-overflow:      ellipsis;
	-webkit-line-clamp: 6; // Slightly fewer lines for consistency
	-webkit-box-orient: vertical;
	}

  &.expanded {
	display:  block;
	overflow: visible;
	}
  }

// REFERENCE CLEAN ARCHITECTURE - Stable preview section
.previewSection {
  flex-shrink: 0; // Never shrink - maintains stability
  // Removed margin-bottom for tighter layout
  }

// Ellipsis section - clean separation from preview
.ellipsisSection {
  flex-shrink: 0;
  margin:      $spacing-s 0; text-align: center;
  }

.previewEllipsis {
  font-family: $font-family-body; // Was $font-family-secondary
  font-size:   $font-size-sm-md; // Was 18px;
  margin:      0;
  text-align:  center;
  color:       $neutral-mid; // Was $grey-500;
  }

// Hidden content indicator voor preview
.hiddenContentIndicator {
  font-family: $font-family-body; // Was $font-family-secondary
  font-size:   $font-size-xs;
  font-style:  italic;
  margin:      $spacing-xs 0;
  text-align:  center;
  opacity:     0.8;
  color:       $neutral-mid-dark; // Was $grey-600;
  }

// ULTRA-SOLID EXPANSION PLACEHOLDER - Critical CSS for container stability
.expansionPlaceholder {
  position: relative;
  overflow: visible !important; // CRITICAL: Override any inline styles that set overflow hidden
  flex:     1; // CRITICAL: Take remaining space to prevent container size issues
  width:    100%;
  // Height controlled by Framer Motion
  }

// EXPANDED CONTENT - Stable content container
.expandedContent {
  position:       relative;
  display:        flex;
  overflow:       visible; // CRITICAL: Ensure all content is visible
  flex-direction: column;
  width:          100%;
  height:         auto; // Allow natural height
  min-height:     fit-content;
  padding-top:    $spacing-xs; // Was $spacing-sm; // 8px - matches height calculation
  padding-bottom: $spacing-m; // Space for separator
  }

// Visual separator at bottom of expanded content
.poemSeparator {
  display:         flex;
  align-items:     center;
  justify-content: center;
  width:           100%;
  margin-top:      $spacing-m;
  margin-bottom:   $spacing-s;
  padding:         $spacing-s 0;
  cursor:          default;
  gap:             $spacing-s;
  // Prevent layout shift
  contain:         layout;

  .separatorDingbat {
	font-size:   1.2rem;
	line-height: 1;
	display:     inline-block;
	width:       1.2em;
	height:      1.2em;
	// Use will-change for performance
	transition:  color $transition-normal, opacity $transition-normal;
	// Fixed dimensions to prevent shift
	transform:   rotate(90deg);
	text-align:  center;
	opacity:     0.5;
	color:       $neutral-mid; // Softer, more subtle color
	will-change: opacity;

	&:nth-child(2) {
	  opacity: 0.7; // Middle slightly more visible
	  // No scale transform to prevent shift
	  }

	&:nth-child(3) {
	  opacity: 0.5;
	  }
	}

  // Subtle hover effect without layout shift
  &:hover .separatorDingbat {
	opacity: 0.8; // Not fully opaque, more subtle
	color:   $primary-light; // Softer cognac shade
	// No transform changes on hover
	}
  }

// Button container - used for expand button in ellipsis section
.buttonContainer {
  display:         flex;
  align-items:     center;
  flex-shrink:     0;
  justify-content: center;
  width:           100%;
  margin-top:      $spacing-m; padding-top: $spacing-m; border-top: 1px solid rgba($neutral-mid, 0.1); // Was $grey-500
  gap:             $spacing-s; // Was spacing-sm;
  }

// Collapse button - naturally positioned within expanded content
.collapseButton {
  margin-top: $spacing-m; background-color: color.adjust($primary-cognac, $lightness: -5%); // Darker for collapse action
  // Positioned naturally at end of expanded content flow
  }

.fullPoemText {
  flex:  1;
  width: 100%;

  .poemLine {
	font-family:   $font-family-body; // Was $font-family-secondary
	font-size:     $font-size-s; // Was 16px;
	font-weight:   $font-weight-regular; // Was 400;
	line-height:   $line-height-relaxed; // Was 1.6;
	margin:        0 0 $spacing-xs 0; // Was 0.5rem
	padding:       0;
	word-wrap:     break-word;
	color:         $text-primary;
	overflow-wrap: break-word;
	}
  }

.poemLine {
  font-family:    $font-family-body; // Was $font-family-secondary
  font-size:      $font-size-s; // Was 16px; // EXACT value used in height calculation
  font-weight:    $font-weight-regular; // Was 400;
  line-height:    $line-height-relaxed; // Was 1.6; // EXACT value used in height calculation
  width:          100%;
  margin:         0 0 $spacing-xs 0; // Was 0.5rem; // EXACT value: 0.5rem = 8px used in height calculation
  padding:        0;
  text-align:     left;
  letter-spacing: 0.5px;
  word-wrap:      break-word;
  color:          $neutral-soft-black; // Was $smoky-black;
  overflow-wrap:  break-word;
  }

.cardActions {
  display:         flex;
  align-items:     center;
  flex-shrink:     0;
  justify-content: space-between;
  margin-top:      $spacing-m; padding-top: $spacing-m; border-top: $border-width-thin solid $accent-greyish; // Was $grey-800
  gap:             $spacing-s; // Was spacing-sm;
  }

// Reduced spacing for canvas mode (DesignPage)
.canvasMode .cardActions {
  margin-top:  $spacing-xs; // Much smaller top margin
  padding-top: $spacing-xs; // Much smaller top padding
  }

// More compact cards for DesignPage while maintaining equal heights
.canvasMode .resultCard {
  padding: $spacing-s; // Was spacing-sm; // Reduced internal padding
  }

.canvasMode .poemLine {
  line-height:   $line-height-normal-plus; // Was 1.4; // Slightly condensed line height
  margin-bottom: $spacing-xxs; // Was 0.25rem; // Tighter line spacing
  }

.canvasMode .cardHeader {
  height:         $spacing-xxxl; // Was 4rem; // Standard height for consistent card alignment
  margin-bottom:  $spacing-xs; // Tighter header spacing
  padding:        0; // Remove all padding for DesignPage
  padding-top:    $spacing-xs; // Was 0.5rem; // Add top padding for poemTitle breathing room
  padding-bottom: $spacing-xs; // Was 0.5rem; // Only bottom padding for DesignPage
  }

.expandIcon {
  font-size:       $font-size-xxxs; // Was 12px;
  font-weight:     bold;
  display:         inline-flex;
  align-items:     center;
  justify-content: center;
  width:           $size-icon; // Was 16px;
  height:          $size-icon; // Was 16px;
  margin-right:    $spacing-xs;
  transition:      transform $transition-fast;
  }

.expandButton {
  @include button-base;
  font-size:        $font-size-s; font-weight: $font-weight-semibold; // Was 600;
  position:         relative;
  z-index:          1;
  min-height:       $height-min-button; // Was 40px;
  padding:          $spacing-s $spacing-l;
  transition:       all $transition-fast;
  color:            $neutral-white; // Was $white;
  border:           $border-width-regular solid transparent; // Was 2px

  // Ensure good visibility
  background-color: $primary-cognac; // Use more visible primary color
  box-shadow:       $shadow-sm;

  &:hover:not(:disabled) {
	transform:        translateY(-2px);
	background-color: color.adjust($primary-cognac, $lightness: -10%);
	box-shadow:       $shadow-md;
	}

  &:disabled {
	cursor:    not-allowed;
	transform: none;
	opacity:   0.6;
	}
  }

// Button container for side-by-side layout
.buttonContainer {
  display:         flex;
  align-items:     center;
  justify-content: center;
  width:           100%;
  margin-top:      $spacing-m; gap: $spacing-m;
  @include respond-to("mobile") {
	flex-direction: column;
	gap:            $spacing-s; // Was spacing-sm;
	}
  }

// Canvas navigation button with distinct styling
.canvasButton {
  border-color:     transparent;
  background-color: $secondary-carribean-current;

  &:hover:not(:disabled) {
	background-color: color.adjust($secondary-carribean-current, $lightness: -10%);
	}

  .expandIcon {
	font-size: $font-size-xxs; // Was 14px; // Slightly larger for emoji
	}
  }

// Load in canvas button - for loading in preview without navigation
.loadCanvasButton {
  color:            $neutral-soft-black; // Was $smoky-black;
  border-color:     transparent;
  background-color: $accent-gold; // Was $camel;

  &:hover:not(:disabled) {
	background-color: color.adjust($accent-gold, $lightness: -10%); // Was $camel
	}

  .expandIcon {
	font-size: $font-size-xxs; // Was 14px;
	}
  }

// Existing collapse button gets specific margin override
.collapseButton {
  margin-top:       0; // Override existing margin when in container
  background-color: color.adjust($primary-cognac, $lightness: -5%);
  }

// Actions for non-expandable poems
.nonExpandableActions {
  display:         flex;
  justify-content: center;
  margin-top:      $spacing-s; // Was spacing-sm;
  // Removed padding for tighter layout
  }

// Layout Classes - Based on reference implementation
.singleResult {
  display:         flex;
  justify-content: center;
  width:           100%;
  max-width:       100vw;
  margin:          0 auto;

  .resultsList {
	display:         flex;
	justify-content: center;
	width:           100%;
	max-width:       60vw;
	gap:             0;
	}

  .resultCard {
	flex-shrink: 0;
	width:       60vw;
	}
  }

.twoColumns {
  display:         flex;
  justify-content: center;
  width:           100%;
  max-width:       100vw;
  margin:          0 auto;

  .resultsList {
	display:         flex;
	align-items:     flex-start; // CRITICAL: Keep cards aligned to top when one expands
	flex-direction:  row; // Explicit row layout for desktop
	justify-content: center;
	width:           100%;
	max-width:       90vw;
	gap:             3vw;
	}

  .resultCard {
	flex-shrink: 0;
	width:       43.5vw;
	}

  @include respond-to("tablet") {
	.resultsList {
	  align-items:    center;
	  flex-direction: column;
	  gap:            2rem;
	  }

	.resultCard {
	  width:     80vw;
	  max-width: 600px;
	  }
	}
  }

.threeColumns {
  display:         flex;
  justify-content: center;
  width:           100%;
  max-width:       100vw;
  margin:          0 auto;

  .resultsList {
	display:         flex;
	align-items:     flex-start; // CRITICAL: Keep cards aligned to top when one expands
	flex-direction:  row; // Explicit row layout for desktop
	justify-content: center;
	width:           100%;
	max-width:       94vw;
	gap:             2vw;
	}

  .resultCard {
	flex-shrink: 0;
	width:       30vw;
	}

  @include respond-to("tablet") {
	.resultsList {
	  align-items:    center;
	  flex-direction: column;
	  max-width:      80vw;
	  gap:            2rem;
	  }

	.resultCard {
	  width:     80vw;
	  max-width: 600px;
	  }
	}
  }

.threeColumnsCarousel {
  display:         flex;
  overflow:        visible;
  justify-content: center;
  width:           100%;
  max-width:       100vw;
  margin:          0 auto;
  padding:         0 8vw; // Space for carousel arrows

  .resultsList {
	position:        relative; // Required for pseudo-elements
	display:         flex;
	align-items:     flex-start; // CRITICAL FIX: Prevent bidirectional expansion in carousel
	flex-direction:  row; // Explicit row layout for desktop
	justify-content: center;
	width:           100%;
	max-width:       84vw;
	gap:             2vw;

	}


  .resultCard {
	flex-shrink: 0;
	width:       26vw;
	}

  @include respond-to("tablet") {
	padding: 0 2vw;

	.resultsList {
	  align-items:    center;
	  flex-direction: column;
	  max-width:      80vw;
	  gap:            2rem;
	  }

	.resultCard {
	  width:     80vw;
	  max-width: 600px;
	  }
	}
  }

.carouselNavigation {
  display:         flex;
  align-items:     center;
  justify-content: center;
  margin-top:      $spacing-xl;
  gap:             $spacing-m; // Was spacing-md;

  .navButton {
	@include button-base;
	font-size:        $font-size-l;
	width:            $height-min-button; // Was 40px;
	height:           $height-min-button; // Was 40px;
	color:            $neutral-white; // Was $white;
	border:           none;
	border-radius:    $border-radius-pill; // Was $border-radius-full;
	background-color: $secondary-carribean-current;

	&:hover:not(:disabled) {
	  background-color: color.adjust($secondary-carribean-current, $lightness: -10%);
	  }

	&:disabled {
	  cursor:  not-allowed;
	  opacity: 0.5;
	  }
	}
  }

.carouselDots {
  display: flex;
  gap:     $spacing-xs;

  .dot {
	width:            $spacing-xs; // Was 8px;
	height:           $spacing-xs; // Was 8px;
	cursor:           pointer;
	transition:       background-color $transition-fast;
	border-radius:    $border-radius-pill; // Was $border-radius-full;
	background-color: $neutral-mid-dark; // Was $grey-600;

	&.active {
	  background-color: $secondary-carribean-current;
	  }

	&:hover {
	  background-color: $secondary-carribean-current;
	  }
	}
  }

// Mobile-specific improvements
@include respond-to("mobile") {
  .searchResultsSection {
	padding: $spacing-l 0;
	gap:     $spacing-l;
	}

  .globalToggleContainer {
	padding: 0 $spacing-s; // Was $spacing-sm
	}

  .globalToggleButton {
	font-size: $font-size-xs;
	padding:   $spacing-s $spacing-m; // Was $spacing-sm $spacing-md
	}

  .resultCard {
	margin-bottom: $spacing-xl;
	}

  .cardHeader {
	height:     auto;
	min-height: $height-min-card-header-mobile; // Was 100px;
	padding:    $spacing-m;

	.poemTitle {
	  font-size: $font-size-s; // Was 16px;
	  }

	.poemAuthor {
	  font-size: $font-size-xxxs; // Was 12px;
	  }
	}

  .poemContent {
	padding: $spacing-m; }

  .poemText {
	font-size:   $font-size-xxs; // Was 14px;
	line-height: $line-height-normal-unitless; // Was 1.5;

	&.collapsed {
	  -webkit-line-clamp: 6;
	  }
	}

  .cardActions {
	margin-top:  $spacing-s; // Was $spacing-sm
	padding-top: $spacing-s; // Was $spacing-sm
	}

  .expandButton {
	font-size: $font-size-xs;
	padding:   $spacing-xs $spacing-s; // Was $spacing-sm
	}

  .singleResult,
  .twoColumns,
  .threeColumns,
  .threeColumnsCarousel {
	padding: 0 $spacing-s; // Was $spacing-sm
	}
  }

// Missing classes that are used in the JSX but not defined
.preview {
  // Collapsed/preview state for poem content
  }

.expanded {
  // Expanded state for poem content - already defined above in poemContent context
  }

// singleResult is already defined above in the Layout Classes section

.mobileStacked {
  // Mobile stacked layout
  display:        flex;
  flex-direction: column;
  width:          100%;
  padding:        0 $spacing-s; // Was $spacing-sm
  gap:            $spacing-l;
  }

// poemAuthor and poemTitle are already defined in the cardHeader section above

.carouselNav {
  // Removed - using inline styles for dynamic positioning as in reference
  }

// Results Overview - Exact Figma 2-half ellipses design
.resultsOverview {
  position:        relative;
  display:         flex;
  justify-content: center;
  margin-bottom:   1.5rem;
  }

.overviewCircle {
  position:      relative;
  overflow:      hidden;
  width:         200px;
  height:        200px;
  border-radius: 50%;
  box-shadow:    0 4px 12px rgba(0, 0, 0, 0.15);

  // Top half - Dark brown with "Ga naar overzicht"
  &::before {
	position:      absolute;
	top:           0;
	left:          0;
	width:         100%;
	height:        50%;
	content:       "";
	border-radius: 200px 200px 0 0; // Keeping specific radius for ellipse effect
	background:    $neutral-dark-brown-figma; // Was #5D3A29; // Dark brown from screenshot
	}

  // Bottom half - Cream/beige with number
  &::after {
	position:      absolute;
	bottom:        0;
	left:          0;
	width:         100%;
	height:        50%;
	content:       "";
	border-radius: 0 0 200px 200px; // Keeping specific radius for ellipse effect
	background:    $neutral-off-white; // Cream color
	}
  }

.overviewContent {
  position:        relative;
  z-index:         2;
  display:         flex;
  align-items:     center;
  flex-direction:  column;
  justify-content: center;
  width:           100%; // Should be $size-overview-circle if circle is parent
  height:          100%; // Should be $size-overview-circle if circle is parent
  }

.overviewTopHalf {
  position:        absolute;
  top:             $font-size-m; // Was 20px;
  right:           0;
  left:            0;
  display:         flex;
  align-items:     center;
  flex-direction:  column;
  justify-content: center;
  height:          50%;
  color:           $neutral-off-white;
  }

.overviewLabel {
  font-family:   $font-family-section-heading; // Was $font-family-primary
  font-size:     $font-size-xxs; // Was 14px;
  font-weight:   $font-weight-semibold; // Was 600;
  font-style:    italic;
  line-height:   $line-height-snug; // Was 1.2;
  margin-bottom: $spacing-xs; // Was 8px;
  text-align:    center;
  }

.overviewIcon {
  font-size: $font-size-l; // Was 24px;
  color:     $accent-golden-highlight; // Was #E6B17A; // Golden color for heart icon
  }

.overviewBottomHalf {
  position:        absolute;
  right:           0;
  bottom:          $font-size-m; // Was 20px;
  left:            0;
  display:         flex;
  align-items:     center;
  flex-direction:  column;
  justify-content: center;
  height:          50%;
  }

.overviewNumber {
  font-family:   $font-family-section-heading; // Was $font-family-primary
  font-size:     $font-size-xxxl; // Was 48px;
  font-weight:   $font-weight-extrabold; // Was 800;
  line-height:   1; // Keep as 1 for precise design
  margin-bottom: $spacing-xs; // Was 8px;
  text-align:    center;
  color:         $neutral-dark-brown-figma; // Was #5D3A29; // Dark brown for number
  }

.overviewLines {
  width:      $width-overview-lines; // Was 60px;
  height:     $border-width-custom-thick; // Was 3px;
  background: repeating-linear-gradient(
							  to right,
							  $accent-golden-highlight 0px, // Was #E6B17A
							  $accent-golden-highlight 8px, // Was #E6B17A
							  transparent 8px,
							  transparent 12px
			  );
  }


// Simple results overview for canvas mode
.resultsOverviewSimple {
  display:         flex;
  align-items:     center;
  justify-content: center;
  margin-bottom:   $spacing-s; // Was $spacing-sm; // Veel compacter
  padding:         $spacing-xs; // Compacter
  gap:             $spacing-xs; // Compacter

  .simpleCount {
	font-family: $font-family-section-heading; // Was $font-family-primary
	font-size:   $font-size-xl;
	font-weight: $font-weight-extrabold; // Was 800
	color:       $primary-cognac; // Brown color
	}

  .simpleLabel {
	font-family: $font-family-section-heading; // Was $font-family-primary
	font-size:   $font-size-s; // Was $font-size-base
	font-weight: $font-weight-semibold; // Was 600
	color:       $primary-flame; // Orange color
	}
  }

.indicatorWrapper {
  // For carousel indicators
  display:         flex;
  align-items:     center;
  justify-content: center;
  margin-top:      $spacing-m; gap: $spacing-xs;
  }

// Animation classes
.fadeIn {
  @include fade-in;
  }

.slideUp {
  @include slide-up;
  }

// Loading and error states
.loadingState {
  @include flex-center;
  font-family: $font-family-section-heading; // Was $font-family-primary
  padding:     $spacing-xxl; // Was $spacing-2xl
  color:       $neutral-off-white; // Was $white-medium;

  .spinner {
	width:         $height-min-button; // Was 40px;
	height:        $height-min-button; // Was 40px;
	animation:     spin 1s linear infinite;
	border:        $border-width-custom-thick solid $neutral-mid-dark; // Was 3px, $grey-600;
	border-top:    $border-width-custom-thick solid $accent-gold; // Was 3px, $camel;
	border-radius: $border-radius-pill; // Was $border-radius-full;
	}
  }

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
  }

.errorState {
  @include flex-center;
  font-family:    $font-family-section-heading; // Was $font-family-primary
  flex-direction: column;
  padding:        $spacing-xxl; // Was $spacing-2xl
  text-align:     center;
  color:          $feedback-error;
  gap:            $spacing-m; // Was spacing-md;

  .errorIcon {
	font-size:     $font-size-4xl;
	margin-bottom: $spacing-m;
	}

  .errorMessage {
	font-size:   $font-size-l; // Was $font-size-lg
	font-weight: $font-weight-semibold; // Was 600;
	}

  .errorDescription {
	font-size: $font-size-s; // Was $font-size-base;
	max-width: $height-progress-container; // Was 400px;
	color:     $neutral-mid-dark; // Was $grey-600;
	}
  }

// Focus Studio button styling
.focusStudioButton {
  color:            $neutral-soft-black; // Was $smoky-black;
  border-color:     $accent-gold; // Was $camel;
  background-color: $accent-gold; // Was $camel;

  &:hover {
	border-color:     color.adjust($accent-gold, $lightness: -10%); // Was $camel
	background-color: color.adjust($accent-gold, $lightness: -10%); // Was $camel
	}
  }

// Compacte Focus Studio knop voor canvas mode
.compactFocusStudioButton {
  font-family:      $font-family-button; // Was $font-family-primary
  font-size:        $font-size-xs;
  font-weight:      $font-weight-semibold; // Was 600
  display:          flex;
  align-items:      center;
  justify-content:  center;
  width:            fit-content; // Alleen zo breed als nodig
  margin:           0 auto $spacing-xs auto; // Horizontaal gecentreerd
  padding:          $spacing-xs $spacing-s;
  cursor:           pointer;
  transition:       all $transition-fast;
  color:            $neutral-soft-black; // Was $smoky-black
  border:           1px solid $accent-gold; // Was $camel
  border-radius:    $border-radius-sm;
  background-color: $accent-gold; // Was $camel
  gap:              $spacing-xs;

  &:hover {
	transform:        translateY(-1px);
	border-color:     color.adjust($accent-gold, $lightness: -10%); // Was $camel
	background-color: color.adjust($accent-gold, $lightness: -10%); // Was $camel
	}

  .focusIcon {
	font-size: $font-size-s; }
  }


// Canvas mode card styling
.canvasCard {
  padding-bottom: 0; // No extra spacing necessary
  transition:     all $transition-fast;

  &:hover {
	transform:    translateY(-2px) scale(1.02);
	border-color: $secondary-carribean-current;
	box-shadow:   $shadow-lg;
	}

  &:active {
	transform: translateY(0) scale(0.98);
	}

  // Ensure buttons have proper spacing
  .buttonContainer {
	margin-bottom: $spacing-s; // Was $spacing-sm
	}
  }

// Toast hint for double-click functionality (overlay version)
.doubleClickToastInline {
  // Absolute positioning within card - overlaps button area
  font-size:       $font-size-s; font-weight: $font-weight-semibold; // Was 600;
  position:        absolute;
  z-index:         $z-toast; // Ensure it appears above buttons

  // Responsive sizing optimized for button overlap
  bottom:          $spacing-xxs; // Was 4px; // Overlap the button area
  left:            50%;
  display:         flex;

  // Visual styling
  align-items:     center;
  justify-content: center;
  width:           calc(100% - #{$spacing-m}); // Was 16px; // Less padding constraint for better overlap
  min-width:       $width-min-toast; // Was 180px; // Minimum readable width
  max-width:       $width-max-toast; // Was 260px; // Slightly smaller for better button overlap
  min-height:      $spacing-xl; // Was 32px;
  padding:         $spacing-xs $spacing-m; // Was $spacing-md
  transform:       translateX(-50%); // Perfect centering
  animation:       toastPulse 2s ease-in-out infinite;
  text-align:      center;
  pointer-events:  none;

  // Layout and stacking
  color:           $neutral-white; // Was white
  border:          $border-width-regular solid rgba($neutral-white, 0.2); // Was 2px, white
  border-radius:   $border-radius-md;
  background:      linear-gradient(135deg, rgba($primary-flame, 0.95), rgba($secondary-carribean-current, 0.95));

  // Subtle pulse animation to draw attention
  backdrop-filter: blur(8px);
  }

@keyframes toastPulse {
  0%, 100% {
	transform:  translateX(-50%) scale(1);
	box-shadow: $shadow-lg;
	}
  50% {
	transform:  translateX(-50%) scale(1.02);
	box-shadow: $shadow-lg, 0 0 15px rgba($primary-flame, 0.5);
	}
  }