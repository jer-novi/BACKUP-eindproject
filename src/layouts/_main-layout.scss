/**
 * Main Layout Styles
 *
 * Core layout styles for the main app structure:
 * - App wrapper
 * - Content areas
 * - Grid systems
 * - Container utilities
 *
 * NOTE: This file is deprecated. All layout styles have been consolidated
 * into /src/styles/_layout.scss. Please use that file instead.
 */

@use "../styles/variables" as *;
@use "../styles/mixins" as *;

// Main app layout
.app-layout {
  display:        flex;
  flex-direction: column;
  min-height:     100vh;
  }

// Main content area
.main-content {
  flex:        1;
  padding-top: var(--header-height);

  &--no-header {
	padding-top: 0;
	}
  }

// Container utilities
.container {
  width:     100%;
  max-width: var(--container-max-width);
  margin:    0 auto;
  padding:   0 var(--spacing-lg);

  @include respond-to("mobile") {
	padding: 0 var(--spacing-md);
	}

  &--fluid {
	max-width: 100%;
	}

  &--narrow {
	max-width: 800px;
	}

  &--wide {
	max-width: 1400px;
	}
  }

// Section spacing
.section {
  padding: var(--spacing-2xl) 0;

  @include respond-to("mobile") {
	padding: var(--spacing-xl) 0;
	}

  &--small {
	padding: var(--spacing-xl) 0;

	@include respond-to("mobile") {
	  padding: var(--spacing-lg) 0;
	  }
	}

  &--large {
	padding: var(--spacing-3xl) 0;

	@include respond-to("mobile") {
	  padding: var(--spacing-2xl) 0;
	  }
	}
  }

// Grid layouts
.grid {
  display: grid;
  gap:     var(--spacing-lg);

  &--2 {
	grid-template-columns: repeat(2, 1fr);

	@include respond-to("tablet") {
	  grid-template-columns: 1fr;
	  }
	}

  &--3 {
	grid-template-columns: repeat(3, 1fr);

	@include respond-to("tablet") {
	  grid-template-columns: 1fr;
	  }
	}

  &--4 {
	grid-template-columns: repeat(4, 1fr);

	@include respond-to("desktop") {
	  grid-template-columns: repeat(2, 1fr);
	  }

	@include respond-to("tablet") {
	  grid-template-columns: 1fr;
	  }
	}
  }

// Flex layouts
.flex {
  display: flex;
  gap:     var(--spacing-md);

  &--column {
	flex-direction: column;
	}

  &--center {
	align-items:     center;
	justify-content: center;
	}

  &--between {
	justify-content: space-between;
	}

  &--wrap {
	flex-wrap: wrap;
	}
  }